
% function  [xv, yv] = generate_booking_limits_lp()
% function  [xv, yv] = generate_booking_limits_lp(T, lt, bt, N, su, sl, c, mu)
function  [xv, yv] = generate_booking_limits_lp(safety, capacity, booking_limit_stretch, distribution)

    fprintf("Inside generate_booking_limits_lp %d, %s, %d\n", safety, capacity, booking_limit_stretch)

t0 = cputime;

T = 70;
lt = 21; %two shots lead time
bt = booking_limit_stretch; % 4; %beyond time
Ty = T+lt+bt; % dimension of x and y

Su_LT = 7; % supply lead time
Sl_LT = 45;  % expiry period

rp1 = 0.8;
rp2= 0.8;

N = (129.675+226.2+226.2+225.225+225.225+119.925+120.9+120.9+120.9)/2;
% [mu, cov, d_std] = demand_gen(T, N);
% Sigma = mu*mu' + cov;

% disp = 1;
% su = zeros(Ty,1);
% %su(:) = sum(N);
% su(1) = 129.675;
% su(8) = 226.2;
% su(15) = 226.2*disp;
% su(22) = 225.225*disp;
% su(28) = 225.225*disp;
% su(36) = 119.925*disp;
% su(43) = 120.9*disp;
% su(50) = 120.9*disp;
% su(57) = 120.9*disp;
if distribution == "teacher_dist"
    mu = [29030, 56816, 49046, 52361, 52636, 47188, 53079, 48159, 64311, 34013, 29326, 22971, 15834, 14082, 18833, 33443, 21577, 13723, 17587, 10471, 10831, 17693, 10978, 6186, 4919, 1689, 949, 1456, 1815, 2322, 1013, 528, 612, 654, 907, 1393, 2132, 590, 126, 1794, 1752, 781, 337, 1245, 359, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]';
elseif distribution == "elder_60_69_dist"
    mu = [29030, 56816, 49046, 52361, 52636, 47188, 53079, 48159, 64311, 34013, 29326, 22971, 15834, 14082, 18833, 33443, 21577, 13723, 17587, 10471, 10831, 17693, 10978, 6186, 4919, 1689, 949, 1456, 1815, 2322, 1013, 528, 612, 654, 907, 1393, 2132, 590, 126, 1794, 1752, 781, 337, 1245, 359, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]';
end

su = [129675, 0, 0, 0, 0, 0, 0, 226200, 0, 0, 0, 0, 0, 0, 226200, 0, 0, 0, 0, 0, 0, 225225, 0, 0, 0, 0, 0, 0, 225225, 0, 0, 0, 0, 0, 0, 119925, 0, 0, 0, 0, 0, 0, 120900, 0, 0, 0, 0, 0, 0, 120900, 0, 0, 0, 0, 0, 0, 120900, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]';

Su = zeros(Ty,1);
Su(1) = su(1);
for i = 1:Ty-1
    Su(i+1) = Su(i)+su(i+1);
end

sl= zeros(Ty,1);

Sl = zeros(Ty,1);
Sl(1) = sl(1);
for i = 1:Ty-1
    Sl(i+1) = Sl(i)+sl(i+1);
end

% c = zeros(Ty,1);
% c = [54;46;50;53;53;47;51;58;53;56;56;56;54;56;61;55;58;60;60;60;
%     61;64;64;64;64;64;64;66;66;64;64;64;64;64;64;64;66;64;64;64;66;64;64];
% c(44:1:Ty) = 66;
% long tail second dose demand
%N_sp_2 = (392.62-218.694)/15;
% N_sp_2 = 0;
% c(1:15) = c(1:15)- N_sp_2;

if capacity == "Full"
    % % Fullcapacity
    c = [40559, 44787, 44096, 42663, 44674, 38847, 41509, 41456, 42116, 40590, 39301, 34196, 35939, 39835, 40384, 44519, 47788, 47788, 46324, 47458, 51522, 45179, 51511, 53099, 54213, 52893, 52346, 52886, 61535, 61442, 61834, 62215, 61885, 64082, 60481, 63628, 63092, 62937, 63123, 62576, 63989, 61814, 62762, 62731, 62432, 66000, 62463, 64113, 62000, 66000, 66000, 66000, 66000, 66000, 66000, 62000, 66000, 66000, 66000, 66000, 66000, 66000, 62000, 66000, 66000, 66000, 66000, 66000, 66000, 62000, 66000, 66000, 66000, 66000, 66000, 66000, 62000, 66000, 66000, 66000, 66000, 66000, 66000, 62000, 66000, 66000, 66000, 66000, 66000, 66000, 62000, 66000, 66000, 66000, 66000]';
elseif capacity == "Reduced_4VC"
    % % ReducedCapacity
    c = [35643, 39359, 38752, 37491, 39258, 34139, 36153, 36432, 37012, 35670, 34537, 30052, 31583, 34695, 35488, 39123, 41996, 41996, 40708, 41706, 44874, 39703, 45267, 46663, 47641, 46481, 46002, 46062, 54075, 53994, 54338, 54675, 54385, 56314, 52677, 55916, 55444, 55309, 55471, 54992, 56233, 53838, 55154, 55127, 54864, 58000, 54891, 56341, 54000, 58000, 58000, 58000, 58000, 58000, 58000, 54000, 58000, 58000, 58000, 58000, 58000, 58000, 54000, 58000, 58000, 58000, 58000, 58000, 58000, 54000, 58000, 58000, 58000, 58000, 58000, 58000, 54000, 58000, 58000, 58000, 58000, 58000, 58000, 54000, 58000, 58000, 58000, 58000, 58000, 58000, 54000, 58000, 58000, 58000, 58000]';
end
c = c(1:Ty);

C1z = eye(T*Ty);
for i = 1:T
        C1z(((i-1)*Ty +lt+i:(i-1)*Ty +lt+bt+i), ((i-1)*Ty +lt+i:(i-1)*Ty +lt+bt+i)) = 0;
end

C2z = zeros(T, T*Ty);
for i = 1: T
     for j = 1:Ty
        C2z(i, (i-1)*Ty +j) = 1;
     end
end

C2x = zeros(T, Ty);
C2x(1:T, 1:T) = - eye(T);


C3z = zeros(Ty, T*Ty);
for i = 1: Ty
     for j = 1:T
        C3z(i,(j-1)*Ty+i) = 1;
     end
end

C3y = -eye(Ty);

C4 = tril(ones(Ty, Ty));

% C5 = zeros(Ty, Ty);
%  for i = 1:Ty-14
%      C5(i, i+1: i+14) = 1;
C5 = zeros(Ty, Ty);
 for i = 1:Ty-safety
     C5(i, i+1: i+safety) = 1;

 end



A = -eye(T);
B = -eye(T);
b = -ones(T,1);
for i = 1 : T-1
    A(i, i+1) = 1;
end


ph = sdpvar(T,1);
x = sdpvar(Ty,1);
y = sdpvar(Ty, 1);
z = sdpvar(T*Ty, 1);
v = sdpvar(Ty,1);


F = [A'*ph >= mu - x(1:T), B'*ph >= 0];
F = [F, x + y <= c, C1z*z == 0, C2z*z + C2x*x == 0, C3z*z + C3y*y == 0];
F = [F, C4*x + C4*y + C5*y + C4*v <= Su, C4*x + C4*y + C5*y + C4*v >= Sl];
F = [F, x(:)>=0, y(:)>=0, z(:)>=0, v(:)>=0];

obj = ph'*b;

ops = sdpsettings('solver','gurobi');
optimize(F, obj, ops);


% COP_v = double(COP);
WT = double(obj);
xv = double(x);
yv  = double(y);
z_v = double(z);
Z = zeros(T, Ty);
for i = 1:T
    for j = 1:Ty
        Z(i,j) = z_v(Ty*(i-1)+j);
    end
end

% ax = 1:1:Ty;
% at = 1:1:T;
% createaxes(at, mu, d_std, ax, [x_v  yv x_v+yv]')
% hold off
com_time = cputime - t0;
